name: k8s Pipeline

on:
  push:
    branches:
      - main  # Or your desired deployment branch
    paths:
      - 'k8s-manifests/**'  # Trigger only on changes to the manifest folder
jobs:
  build-and-deploy:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Deploy to AWS EKS
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }}
          if kubectl get deployment frontend-deployment -n default &> /dev/null; then
            echo "Frontend deployment exists, updating image..."
            kubectl rollout restart deployment frontend-deployment -n default
          else
            echo "Deployment doesn't exist, creating..."
            kubectl apply -f k8s-manifests/frontend_deployment.yaml
          if kubectl get deployment backend-deployment -n default &> /dev/null; then
            echo "Deployment exists, updating image..."
            kubectl rollout restart deployment backend-deployment -n default
          else
            echo "Deployment doesn't exist, creating..."
            kubectl apply -f k8s-manifests/backend.yaml
          if kubectl get statrefulsets mysql -n default &> /dev/null; then
            echo "Database exists, updating image..."
            kubectl set image statefulset mysql mysql=mysql:latest
          else
            kubectl apply -f k8s-manifests/database.yaml

          kubectl apply -f k8s-manifests/secret.yaml
          kubectl apply -f k8s-manifests/service.yaml